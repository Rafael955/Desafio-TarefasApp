// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TarefasApp.Infra.Data.Contexts;

#nullable disable

namespace TarefasApp.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250625224329_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TarefasApp.Domain.Entities.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("IdTarefa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_TAREFA");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("TEXTO");

                    b.HasKey("Id");

                    b.HasIndex("IdTarefa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("COMENTARIOS", (string)null);
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("PROJETOS", (string)null);
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_VENCIMENTO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DESCRICAO");

                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PROJETO");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int")
                        .HasColumnName("PRIORIDADE");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TITULO");

                    b.HasKey("Id");

                    b.HasIndex("IdProjeto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TAREFAS", (string)null);
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("NivelAcesso")
                        .HasColumnType("int")
                        .HasColumnName("NIVEL_ACESSO");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOME_USUARIO");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(115)
                        .HasColumnType("nvarchar(115)")
                        .HasColumnName("SENHA");

                    b.HasKey("Id");

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.UsuarioProjeto", b =>
                {
                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PROJETO");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("IdProjeto", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("USUARIO_PROJETO", (string)null);
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Comentario", b =>
                {
                    b.HasOne("TarefasApp.Domain.Entities.Tarefa", "Tarefa")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TarefasApp.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Tarefa", b =>
                {
                    b.HasOne("TarefasApp.Domain.Entities.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("IdProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TarefasApp.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Tarefas")
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Projeto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.UsuarioProjeto", b =>
                {
                    b.HasOne("TarefasApp.Domain.Entities.Projeto", "Projeto")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TarefasApp.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Projetos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Projeto", b =>
                {
                    b.Navigation("Tarefas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Tarefa", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("TarefasApp.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Projetos");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
